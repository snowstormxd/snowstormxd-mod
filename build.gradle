plugins {
    // Using a SNAPSHOT version of Loom can sometimes lead to instability.
    // If you encounter persistent issues after correcting fabric_version,
    // consider switching to a stable Loom version (e.g., '1.6.13' or check Fabric docs for latest stable for MC 1.21.5).
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

// These properties are pulled from your gradle.properties file
version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url = uri("https://maven.fabricmc.net/") }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        // Ensure this mod ID matches the "id" in your fabric.mod.json
        // Your fabric.mod.json has "id": "snowstormxd_utility_mod", which matches.
        "snowstormxd_utility_mod" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // This is your existing line for Fabric API. It's important for the common source set
    // and for Loom to generally know about the API.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // ---- ADD THIS LINE ----
    // Explicitly add Fabric API to the client source set's 'implementation' configuration.
    // This might help if the automatic mechanism isn't working as expected for the client set.
    clientImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    // ---------------------
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Sets the Java release version for compilation, ensuring compatibility.
    // Java 21 is appropriate for Minecraft 1.21.x.
    it.options.release = 21
}

java {
    // Configures Java compatibility for your project.
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    // Includes source code in the output JAR, which is good practice.
    withSourcesJar()
}

jar {
    inputs.property "archivesName", project.base.archivesName // Ensures jar task is re-run if archivesName changes

    from("LICENSE") {
        // Includes the LICENSE file in your JAR, renaming it.
        // Make sure you have a file named "LICENSE" in your project root if you want this.
        rename { "${it}_${project.archives_base_name}"} // Corrected to use project.archives_base_name
    }
}

// Configures Maven publishing if you intend to publish your mod to a Maven repository.
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
        // Define repositories to publish to here (e.g., a local Maven repo or a custom one).
        // This is different from the 'repositories' block at the top level.
    }
}
